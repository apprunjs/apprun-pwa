{"version":3,"file":"pwa.js","sources":["../../src/pwa.tsx"],"sourcesContent":["declare var app;\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n  if (navigator.serviceWorker.controller) {\r\n    console.log(\r\n      \"[PWA Builder] active service worker found, no need to register\"\r\n    );\r\n  } else {\r\n    // Register the service worker\r\n    navigator.serviceWorker\r\n      .register(\"sw.js\", {\r\n        scope: \"./\"\r\n      })\r\n      .then(function(reg) {\r\n        console.log(\r\n          \"[PWA Builder] Service worker has been registered for scope: \" +\r\n            reg.scope\r\n        );\r\n      });\r\n  }\r\n}\r\n\r\nlet deferredPrompt;\r\nwindow.addEventListener(\"beforeinstallprompt\", e => {\r\n  // Prevent the mini-infobar from appearing on mobile\r\n  e.preventDefault();\r\n  // Stash the event so it can be triggered later.\r\n  deferredPrompt = e;\r\n  // Update UI notify the user they can install the PWA\r\n  app.run(\"@showInstallPromotion\", deferredPrompt);\r\n});\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  if (navigator[\"standalone\"]) {\r\n    console.log(\"Launched: Installed (iOS)\");\r\n  } else if (matchMedia(\"(display-mode: standalone)\").matches) {\r\n    console.log(\"Launched: Installed\");\r\n  } else {\r\n    console.log(\"Launched: Browser Tab\");\r\n  }\r\n});\r\n\r\nwindow.addEventListener(\"appinstalled\", evt => {\r\n  console.log(\"a2hs installed\");\r\n  app.run(\"@appinstalled\");\r\n});\r\n\r\napp.on(\"@appinstall\", e => {\r\n  // Show the install prompt\r\n  deferredPrompt.prompt();\r\n  // Wait for the user to respond to the prompt\r\n  deferredPrompt.userChoice.then(choiceResult => {\r\n    if (choiceResult.outcome === \"accepted\") {\r\n      console.log(\"User accepted the install prompt\");\r\n    } else {\r\n      console.log(\"User dismissed the install prompt\");\r\n    }\r\n  });\r\n});\r\n\r\napp.on(\"@showInstallPromotion\", () => {});\r\napp.on(\"@appinstalled\", () => {});\r\n"],"names":["deferredPrompt","navigator","serviceWorker","controller","console","log","register","scope","then","reg","window","addEventListener","e","preventDefault","app","run","matchMedia","matches","evt","on","prompt","userChoice","choiceResult","outcome"],"mappings":"yBAsBA,IAAIA,EApBA,kBAAmBC,YACjBA,UAAUC,cAAcC,WAC1BC,QAAQC,IACN,kEAIFJ,UAAUC,cACPI,SAAS,QAAS,CACjBC,MAAO,OAERC,MAAK,SAASC,GACbL,QAAQC,IACN,+DACEI,EAAIF,WAOhBG,OAAOC,iBAAiB,sBAAuBC,IAE7CA,EAAEC,iBAEFb,EAAiBY,EAEjBE,IAAIC,IAAI,wBAAyBf,KAGnCU,OAAOC,iBAAiB,OAAQ,KAC1BV,UAAsB,WACxBG,QAAQC,IAAI,6BACHW,WAAW,8BAA8BC,QAClDb,QAAQC,IAAI,uBAEZD,QAAQC,IAAI,2BAIhBK,OAAOC,iBAAiB,eAAgBO,IACtCd,QAAQC,IAAI,kBACZS,IAAIC,IAAI,mBAGVD,IAAIK,GAAG,cAAeP,IAEpBZ,EAAeoB,SAEfpB,EAAeqB,WAAWb,KAAKc,IACA,aAAzBA,EAAaC,QACfnB,QAAQC,IAAI,oCAEZD,QAAQC,IAAI,yCAKlBS,IAAIK,GAAG,wBAAyB,QAChCL,IAAIK,GAAG,gBAAiB"}